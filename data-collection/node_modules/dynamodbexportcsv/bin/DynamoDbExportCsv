#!/usr/bin/env node
'use strict';

var dynamoDbExport = require('../lib/DynamoDbExportCsv.js');
var commander = require('commander');

commander.version('0.0.1')
    .option('-i, --awsid <awsid>', 'AWS Secret ID')
    .option('-s, --awssecret <awssecret>', 'AWS Secret Access Key')
    .option('-r, --awsregion <awsregion>', 'AWS Region')
    .option('-t, --table <tableName>', 'Table to export')
    .option('-c, --columns <columns>', 'CSV list of columns')
    .option('-b, --bucket [s3bucket]', 'Optional S3 Bucket to upload to')
    .option('-p, --path [s3path]', 'Optional s3 path')
    .option('-g, --gzip', 'Gzip output')
    .option('-f, --filesize [filesize]', 'Size of each file in Mb.  If ommitted 250Mb', parseInt)
    .option('-s, --scans [parallelscans]', 'Parallel scans to run - Defaults to 1', parseInt)
    .parse(process.argv);

if (! commander.table)
{
    console.error("You must specify a table");
    commander.outputHelp();
    process.exit(1);
}

if(! commander.awsid)
{
    console.error("You must specify an aws secret id");
    commander.outputHelp();
    process.exit(1);
}

if(! commander.awssecret)
{
    console.error("You must specify an aws secret access key");
    commander.outputHelp();
    process.exit(1);
}

if(! commander.awsregion)
{
    console.error("You must specify an aws region");
    commander.outputHelp();
    process.exit(1);
}


if (! commander.columns)
{
    console.error("You must specify a list of columns");
    commander.outputHelp();
    process.exit(1);
}

var parallelScans = 1;
if (commander.scans)
{
    parallelScans = commander.scans;
}

var columns = commander.columns.split(',');

console.info("Export DynamoDb table: " + commander.table + ", parallel scans: " + parallelScans);

var exporter = new dynamoDbExport(commander.awsid, commander.awssecret, commander.awsregion);

exporter.on("info", function(message) {
    console.info(message);
});

exporter.on("throughputexceeded", function() {
    console.warn("Throughput exceeded");
});

exporter.exportTable(commander.table, columns, parallelScans, commander.gzip, commander.filesize, commander.bucket, commander.path, function(err) {
    console.info("Done exporting table");
});